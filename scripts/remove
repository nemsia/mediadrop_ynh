#!/bin/bash

# Exit on command errors and treat unset variables as an error
set -u

source .fonctions	# Loads the generic functions usually used in the script
# Source app helpers
source /usr/share/yunohost/helpers

# Get multi-instances specific variables
app=$YNH_APP_INSTANCE_NAME

# Retrieve app settings
domain=$(ynh_app_setting_get "$app" domain)

# Stop uwsgi service
if [ -e "/etc/systemd/system/mediadrop.uwsgi.service" ]; then
	echo "Delete systemd script"
	sudo systemctl stop mediadrop.uwsgi
	sudo rm "/etc/systemd/system/mediadrop.uwsgi.service"
	sudo systemctl disable mediadrop.uwsgi.service
fi

# Delete service on Yunohost monitoring
if sudo yunohost service status | grep -q mediadrop.uwsgi
then
	echo "Remove mediadrop.uwsgi service"
	sudo yunohost service remove mediadrop.uwsgi
fi

# Stop service
if [ -e "/etc/systemd/system/mediadrop.service" ]; then
	echo "Delete systemd script"
	sudo systemctl stop mediadrop
	sudo rm "/etc/systemd/system/mediadrop.service"
	sudo systemctl disable mediadrop.service
fi

# Delete service on Yunohost monitoring
if sudo yunohost service status | grep -q mediadrop
then
	echo "Remove mediadrop service"
	sudo yunohost service remove mediadrop
fi

dbname=$app
dbuser=$app
dbpass=$(ynh_app_setting_get "$app" mysqlpwd)
ynh_mysql_drop_db $dbname
ynh_mysql_drop_user $dbuser

# Remove python app
# sudo pip uninstall uwsgi
# sudo apt-get remove --purge -y libjpeg-dev zlib1g-dev libfreetype6-dev libmysqlclient-dev python-dev
# sudo apt-get remove --purge -y python-setuptools python-virtualenv python-dev python-pip

# Delete app directory and configurations
SECURE_REMOVE '/opt/$app'
[[ -n $domain ]] && sudo rm -f "/etc/nginx/conf.d/${domain}.d/${app}.conf"

REMOVE_NGINX_CONF	# Suppression de la configuration nginx

SECURE_REMOVE '/var/log/$app/'	# Suppression des log

# Remove user
sudo userdel -f $app

# Reload services
sudo systemctl reload nginx

echo -e "\e[0m"	# Restore normal color